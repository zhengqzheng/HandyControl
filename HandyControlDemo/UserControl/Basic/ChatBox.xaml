<UserControl x:Class="HandyControlDemo.UserControl.ChatBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:HandyControl.Controls;assembly=HandyControl"
             xmlns:langs="clr-namespace:HandyControlDemo.Properties.Langs"
             xmlns:interactivity="clr-namespace:HandyControl.Interactivity;assembly=HandyControl"
             mc:Ignorable="d" 
             Height="486"
             Effect="{StaticResource EffectShadow5}"
             Background="{DynamicResource RegionBrush}"
             DataContext="{Binding ChatBox,Source={StaticResource Locator}}"
             Width="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False"  Background="Transparent" controls:ChatBubble.MaxWidth="300" BorderThickness="0" Style="{StaticResource StackPanelVerticalListBox}" ItemsSource="{Binding ChatInfos}">
            <interactivity:Interaction.Triggers>
                <interactivity:RoutedEventTrigger RoutedEvent="controls:ChatBubble.Selected">
                    <interactivity:EventToCommand Command="{Binding ReadMessageCmd}" PassEventArgsToCommand="True" />
                </interactivity:RoutedEventTrigger>
            </interactivity:Interaction.Triggers>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <controls:ChatBubble Role="{Binding Role}" Type="{Binding Type}" Content="{Binding Message}" Tag="{Binding}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Border Background="{DynamicResource DarkDefaultBrush}" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="ToggleButtonAudio" controls:BorderElement.CornerRadius="15" Width="30" Height="30" Padding="7" Margin="6" controls:IconSwitchElement.Geometry="{StaticResource AudioGeometry}" controls:IconSwitchElement.GeometrySelected="{StaticResource KeyboardGeometry}" Style="{StaticResource ToggleButtonIcon}"/>
                <Button Command="{Binding OpenImageCmd}" Grid.Column="2" Margin="6,0,6,0" controls:BorderElement.CornerRadius="15" Width="30" Height="30" Padding="7" controls:IconElement.Geometry="{StaticResource ImageGeometry}"/>
                <TextBox Grid.Column="1" Text="{Binding ChatString,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsChecked,ElementName=ToggleButtonAudio,Converter={StaticResource Boolean2VisibilityReConverter}}">
                    <interactivity:Interaction.Triggers>
                        <interactivity:EventTrigger EventName="KeyDown">
                            <interactivity:EventToCommand Command="{Binding SendStringCmd}" PassEventArgsToCommand="True" />
                        </interactivity:EventTrigger>
                    </interactivity:Interaction.Triggers>
                </TextBox>
                <Button Grid.Column="1" Visibility="{Binding IsChecked,ElementName=ToggleButtonAudio,Converter={StaticResource Boolean2VisibilityConverter}}" Content="{x:Static langs:Lang.PushToTalk}" HorizontalAlignment="Stretch">
                    <interactivity:Interaction.Triggers>
                        <interactivity:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <interactivity:EventToCommand Command="{Binding StartRecordCmd}"/>
                        </interactivity:EventTrigger>
                        <interactivity:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <interactivity:EventToCommand Command="{Binding StopRecordCmd}"/>
                        </interactivity:EventTrigger>
                    </interactivity:Interaction.Triggers>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
